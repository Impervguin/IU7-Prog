####################################################################################################################
# Шахнович Дмитрий ИУ7-12Б
#
#
# Программа для вычисления действительных корней квадратного уравнения.
# Написана по блок схеме, хранящейся в equation.drawio(app.diagrams.net)
####################################################################################################################
from math import sqrt

# Блок ввода
a, b, c = [float(i) for i in input("Введите коэффициенты начиная со старшего через пробел: ").split()]

# Блок вычислений/вывода
if a == 0:
    if b == 0:
        if c == 0:  # Уравнение вида: 0 = 0
            print("Уравнение имеет бесконечное количество действительных решений")
        else:  # Уравнение вида: const = 0
            print("Уравнение не имеет действительных решений")
    else:  # Уравнение вида: bx + c = 0
        x = -c / b
        print(f"Уравнение имеет один действительный корень: {x:.7g}")
else:
    if b == 0:  # Уравнение вида: ax^2 + c = 0
        if -c / a >= 0:  # x^2 = -c/a => -c/a должна быть не отрицательна
            x1 = sqrt(-c / a)
            x2 = -sqrt(-c / a)
            print(f"Уравнение имеет два действительных корня: {x1:.7g}, {x2:.7g}")
        else:  # Подкоренное выражение отрицательно
            print("Уравнение не имеет действительных решений")
    else:
        if c == 0:  # Уравнение вида: ax^2 + bx = 0
            x1 = 0
            x2 = -b / a
            print(f"Уравнение имеет два действительных корня: {x1:.7g}, {x2:.7g}")
        else:  # Уравнение вида: ax^2 + bx + c = 0
            D = b ** 2 - 4 * a * c  # Дискриминант
            if D >= 0:
                x1 = (-b + sqrt(D)) / 2 * a
                x2 = (-b - sqrt(D)) / 2 * a
                print(f"Уравнение имеет два действительных корня: {x1:.7g}, {x2:.7g}")
            else:
                print("Уравнение не имеет действительных решений")
